<div class="user-appointment-form">
    <h1>Book Appointemts</h1>
    <EditForm Model="@appointment" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />

        <div class="form-group">
            <label for="email">Email</label>
            <InputText id="email" class="form-control" placeholder="Enter your email" @bind-Value="@appointment.Email" />
            <ValidationMessage For="@(() => appointment.Email)" />
        </div>

        <div class="form-group">
            <label for="preferred-date">Preferred Appointment Date</label>
            <InputDate id="preferred-date" class="form-control" @bind-Value="@appointment.PreferredAppointmentDate" TValue="DateTime?" />
            <ValidationMessage For="@(() => appointment.PreferredAppointmentDate)" />
        </div>

        <div class="form-group">
            <label for="reason">Reason for Visit</label>
            <InputTextArea id="reason" class="form-control" @bind-Value="@appointment.ReasonForVisit" placeholder="Enter the reason for your visit" />
            <ValidationMessage For="@(() => appointment.ReasonForVisit)" />
        </div>

        <div class="form-group">
            <label for="hospital">Select Hospital</label>
            <select id="hospital" class="--control" @bind="@appointment.SelectedHospital">
                <option value="">-- Select Hospital --</option>
                @foreach (var hospital in hospitals)
                {
                    <option value="@hospital">@hospital</option>
                }
            </select>
            <ValidationMessage For="@(() => appointment.SelectedHospital)" />
        </div>

        <div class="form-group">
            <label for="doctor">Select A Doctor</label>
            <select id="doctor" class="form-control" @bind="@appointment.SelectedDoctor">
                <option value="">-- Select Doctor --</option>
                @foreach (var doctor in doctors)
                {
                    <option value="@doctor">@doctor</option>
                }
            </select>
            <ValidationMessage For="@(() => appointment.SelectedDoctor)" />
        </div>

        <div class="form-group">
            <label>Are you an existing patient?</label>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="existing-patient" id="existing-patient-yes" @bind="@appointment.IsExistingPatient" />
                <label class="form-check-label" for="existing-patient-yes">
                    Yes
                </label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="existing-patient" id="existing-patient-no" @bind="@appointment.IsExistingPatient" />
                <label class="form-check-label" for="existing-patient-no">
                    No
                </label>
            </div>
            <ValidationMessage For="@(() => appointment.IsExistingPatient)" />
        </div>
        <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm>
</div>


@code {
    private static List<string> hospitals = new List<string> { "Hospital A", "Hospital B", "Hospital C" };
    private static List<string> doctors = new List<string> { "Doctor A", "Doctor B", "Doctor C" };
    private Appointment appointment = new Appointment
    {
        Email = "example@example.com",
        PreferredAppointmentDate = DateTime.Today.AddDays(7),
        SelectedHospital = hospitals?.FirstOrDefault(),
        SelectedDoctor = doctors?.FirstOrDefault(),
        IsExistingPatient = true
    };

    private async Task HandleValidSubmit()
    {
        // Handle form submission here
    }
}
